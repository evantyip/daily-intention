// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Day           Day[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Day {
  id         String       @id @default(cuid())
  date       DateTime     @default(now())
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  Intent     Intent[]
  Reflection Reflection[]
}

model Intent {
  id    String @id @default(cuid())
  word  String
  notes String
  day   Day    @relation(fields: [dayId], references: [id])
  dayId String
}

model Reflection {
  id         String  @id @default(cuid())
  feeling    Feeling @relation(fields: [feelingInt], references: [id])
  feelingInt Int
  notes      String
  day        Day     @relation(fields: [dayId], references: [id])
  dayId      String
}

model Feeling {
  id      Int          @id @default(autoincrement())
  feeling String
  Post    Reflection[]
}
